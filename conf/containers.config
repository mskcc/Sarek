/*
 * -------------------------------------------------
 * Nextflow config file for Sarek
 * -------------------------------------------------
 * Images for every process
 * All images will be pulled automatically
 * -------------------------------------------------
 */

process {
  withName:BuildBWAindexes {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:BuildCache_snpEff {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:BuildCache_VEP {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:BuildReferenceIndex {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:BuildSAMToolsIndex {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:BuildVCFIndex {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:CompressVCF {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:ConcatVCF {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:CreateIntervalBeds {
    container = "cmopipeline/bwa-samtools-gatk4-sambamba-samblaster:latest"
  }
  withName:CreateRecalibrationTable {
    container = "cmopipeline/bwa-samtools-gatk4-sambamba-samblaster:latest"
  }
  withName:GetVersionAll {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:GetVersionAlleleCount {
    container = "${params.repository}/runallelecount:${params.tag}"
  }
  withName:GetVersionASCAT {
    container = "${params.repository}/r-base:${params.tag}"
  }
  withName:MapReads {
    container = "cmopipeline/bwa-samtools-gatk4-sambamba-samblaster:latest"
  }
  withName:MarkDuplicates {
    container = "cmopipeline/bwa-samtools-gatk4-sambamba-samblaster:latest"
  }
  withName:MergeBams {
    container = "cmopipeline/bwa-samtools-gatk4-sambamba-samblaster:latest"
  }
  withName:RecalibrateBam {
    container = "cmopipeline/bwa-samtools-gatk4-sambamba-samblaster:latest"
  }
  withName:RunAlleleCount {
    container = "${params.repository}/runallelecount:${params.tag}"
  }
  withName:RunAscat {
    container = "${params.repository}/r-base:${params.tag}"
  }
  withName:RunBamQCmapped {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunBamQCrecalibrated {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunBcftoolsStats {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunConvertAlleleCounts {
    container = "${params.repository}/r-base:${params.tag}"
  }
  withName:RunFastQC {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunFreeBayes {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunGenotypeGVCFs {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunHaplotypecaller {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunManta {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunMultiQC {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunMutect2 {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunSamtoolsStats {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunSingleManta {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunSingleStrelka {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunSnpeff {
    container = {(params.snpEff_cache && params.annotation_cache) ? "${params.repository}/sarek:${params.tag}" : params.genome == 'GRCh38' ? "${params.repository}/snpeffgrch38:${params.tag}" : "${params.repository}/snpeffgrch37:${params.tag}"}
  }
  withName:RunStrelka {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunStrelkaBP {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunVcftools {
    container = "${params.repository}/sarek:${params.tag}"
  }
  withName:RunVEP {
    container = {(params.vep_cache && params.annotation_cache) ? "${params.repository}/sarek:${params.tag}" : params.genome == 'GRCh38' ? "${params.repository}/vepgrch38:${params.tag}" : "${params.repository}/vepgrch37:${params.tag}"}
  }
}
